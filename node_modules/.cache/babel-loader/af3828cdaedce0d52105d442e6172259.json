{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROYECTOS\\\\CACAO-swap\\\\src\\\\components\\\\PageHeader\\\\RecentTransactionsModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from '@pancakeswap-libs/uikit';\nimport { useActiveWeb3React } from 'hooks';\nimport { getBscScanLink } from 'utils';\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks';\nimport Loader from 'components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null;\n\nconst newTransactionsFirst = (a, b) => b.addedTime - a.addedTime;\n\nconst getRowStatus = sortedRecentTransaction => {\n  const {\n    hash,\n    receipt\n  } = sortedRecentTransaction;\n\n  if (!hash) {\n    return {\n      icon: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this),\n      color: 'text'\n    };\n  }\n\n  if (hash && (receipt === null || receipt === void 0 ? void 0 : receipt.status) === 1) {\n    return {\n      icon: /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n        color: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this),\n      color: 'success'\n    };\n  }\n\n  return {\n    icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n      color: \"failure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this),\n    color: 'failure'\n  };\n};\n\nconst RecentTransactionsModal = ({\n  onDismiss = defaultOnDismiss,\n  translateString\n}) => {\n  _s();\n\n  const TranslateString = translateString;\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const allTransactions = useAllTransactions(); // Logic taken from Web3Status/index.tsx line 175\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: TranslateString(1202, 'Recent transactions'),\n    onDismiss: onDismiss,\n    children: [!account && /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mb: \"8px\",\n        bold: true,\n        children: \"Please connect your wallet to view your recent transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"tertiary\",\n        scale: \"sm\",\n        onClick: onDismiss,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), account && chainId && sortedRecentTransactions.length === 0 && /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mb: \"8px\",\n        bold: true,\n        children: \"No recent transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"tertiary\",\n        scale: \"sm\",\n        onClick: onDismiss,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), account && chainId && sortedRecentTransactions.map(sortedRecentTransaction => {\n      const {\n        hash,\n        summary\n      } = sortedRecentTransaction;\n      const {\n        icon,\n        color\n      } = getRowStatus(sortedRecentTransaction);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          mb: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(LinkExternal, {\n            href: getBscScanLink(chainId, hash, 'transaction'),\n            color: color,\n            children: summary !== null && summary !== void 0 ? summary : hash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), icon]\n        }, hash, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecentTransactionsModal, \"UezzBuaw5zqYBREmykHAyWSNQKY=\", false, function () {\n  return [useActiveWeb3React, useAllTransactions];\n});\n\n_c = RecentTransactionsModal;\nexport default RecentTransactionsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentTransactionsModal\");","map":{"version":3,"sources":["C:/PROYECTOS/CACAO-swap/src/components/PageHeader/RecentTransactionsModal.tsx"],"names":["React","useMemo","CheckmarkCircleIcon","ErrorIcon","Flex","LinkExternal","Text","Modal","Button","useActiveWeb3React","getBscScanLink","isTransactionRecent","useAllTransactions","Loader","defaultOnDismiss","newTransactionsFirst","a","b","addedTime","getRowStatus","sortedRecentTransaction","hash","receipt","icon","color","status","RecentTransactionsModal","onDismiss","translateString","TranslateString","account","chainId","allTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","length","map","summary"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,mBAAT,EAA8BC,SAA9B,EAAyCC,IAAzC,EAA+CC,YAA/C,EAA6DC,IAA7D,EAAmEC,KAAnE,EAA0EC,MAA1E,QAAwF,yBAAxF;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,0BAAxD;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAOA;AACA,MAAMC,gBAAgB,GAAG,MAAM,IAA/B;;AAEA,MAAMC,oBAAoB,GAAG,CAACC,CAAD,EAAwBC,CAAxB,KAAkDA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAA/F;;AAEA,MAAMC,YAAY,GAAIC,uBAAD,IAAiD;AACpE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,uBAA1B;;AAEA,MAAI,CAACC,IAAL,EAAW;AACT,WAAO;AAAEE,MAAAA,IAAI,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAR;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAAP;AACD;;AAED,MAAIH,IAAI,IAAI,CAAAC,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,MAAT,MAAoB,CAAhC,EAAmC;AACjC,WAAO;AAAEF,MAAAA,IAAI,eAAE,QAAC,mBAAD;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAR;AAAiDC,MAAAA,KAAK,EAAE;AAAxD,KAAP;AACD;;AAED,SAAO;AAAED,IAAAA,IAAI,eAAE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAR;AAAuCC,IAAAA,KAAK,EAAE;AAA9C,GAAP;AACD,CAZD;;AAcA,MAAME,uBAAuB,GAAG,CAAC;AAAEC,EAAAA,SAAS,GAAGb,gBAAd;AAAgCc,EAAAA;AAAhC,CAAD,KAAqF;AAAA;;AACnH,QAAMC,eAAe,GAAGD,eAAxB;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBtB,kBAAkB,EAA/C;AACA,QAAMuB,eAAe,GAAGpB,kBAAkB,EAA1C,CAHmH,CAKnH;;AACA,QAAMqB,wBAAwB,GAAGhC,OAAO,CAAC,MAAM;AAC7C,UAAMiC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcJ,eAAd,CAAZ;AACA,WAAOE,GAAG,CAACG,MAAJ,CAAW1B,mBAAX,EAAgC2B,IAAhC,CAAqCvB,oBAArC,CAAP;AACD,GAHuC,EAGrC,CAACiB,eAAD,CAHqC,CAAxC;AAKA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,eAAe,CAAC,IAAD,EAAO,qBAAP,CAA7B;AAA4D,IAAA,SAAS,EAAEF,SAAvE;AAAA,eACG,CAACG,OAAD,iBACC,QAAC,IAAD;AAAM,MAAA,cAAc,EAAC,QAArB;AAA8B,MAAA,aAAa,EAAC,QAA5C;AAAqD,MAAA,UAAU,EAAC,QAAhE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,KAAT;AAAe,QAAA,IAAI,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAA2B,QAAA,KAAK,EAAC,IAAjC;AAAsC,QAAA,OAAO,EAAEH,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAWGG,OAAO,IAAIC,OAAX,IAAsBE,wBAAwB,CAACM,MAAzB,KAAoC,CAA1D,iBACC,QAAC,IAAD;AAAM,MAAA,cAAc,EAAC,QAArB;AAA8B,MAAA,aAAa,EAAC,QAA5C;AAAqD,MAAA,UAAU,EAAC,QAAhE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,KAAT;AAAe,QAAA,IAAI,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAA2B,QAAA,KAAK,EAAC,IAAjC;AAAsC,QAAA,OAAO,EAAEZ,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,EAqBGG,OAAO,IACNC,OADD,IAECE,wBAAwB,CAACO,GAAzB,CAA8BpB,uBAAD,IAA6B;AACxD,YAAM;AAAEC,QAAAA,IAAF;AAAQoB,QAAAA;AAAR,UAAoBrB,uBAA1B;AACA,YAAM;AAAEG,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBL,YAAY,CAACC,uBAAD,CAApC;AAEA,0BACE;AAAA,+BACE,QAAC,IAAD;AAAiB,UAAA,UAAU,EAAC,QAA5B;AAAqC,UAAA,cAAc,EAAC,eAApD;AAAoE,UAAA,EAAE,EAAC,KAAvE;AAAA,kCACE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAEV,cAAc,CAACqB,OAAD,EAAUV,IAAV,EAAgB,aAAhB,CAAlC;AAAkE,YAAA,KAAK,EAAEG,KAAzE;AAAA,sBACGiB,OADH,aACGA,OADH,cACGA,OADH,GACcpB;AADd;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGE,IAJH;AAAA,WAAWF,IAAX;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAUD,KAdD,CAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CApDD;;GAAMK,uB;UAEyBjB,kB,EACLG,kB;;;KAHpBc,uB;AAsDN,eAAeA,uBAAf","sourcesContent":["import React, { useMemo } from 'react'\r\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from '@pancakeswap-libs/uikit'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport Loader from 'components/Loader'\r\n\r\ntype RecentTransactionsModalProps = {\r\n  onDismiss?: () => void\r\n  translateString: (translationId: number, fallback: string) => (string)\r\n}\r\n\r\n// TODO: Fix UI Kit typings\r\nconst defaultOnDismiss = () => null\r\n\r\nconst newTransactionsFirst = (a: TransactionDetails, b: TransactionDetails) => b.addedTime - a.addedTime\r\n\r\nconst getRowStatus = (sortedRecentTransaction: TransactionDetails) => {\r\n  const { hash, receipt } = sortedRecentTransaction\r\n\r\n  if (!hash) {\r\n    return { icon: <Loader />, color: 'text' }\r\n  }\r\n\r\n  if (hash && receipt?.status === 1) {\r\n    return { icon: <CheckmarkCircleIcon color=\"success\" />, color: 'success' }\r\n  }\r\n\r\n  return { icon: <ErrorIcon color=\"failure\" />, color: 'failure' }\r\n}\r\n\r\nconst RecentTransactionsModal = ({ onDismiss = defaultOnDismiss, translateString }: RecentTransactionsModalProps) => {\r\n  const TranslateString = translateString\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  // Logic taken from Web3Status/index.tsx line 175\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions)\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\r\n  }, [allTransactions])\r\n\r\n  return (\r\n    <Modal title={TranslateString(1202, 'Recent transactions')} onDismiss={onDismiss}>\r\n      {!account && (\r\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Text mb=\"8px\" bold>\r\n            Please connect your wallet to view your recent transactions\r\n          </Text>\r\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\r\n            Close\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n      {account && chainId && sortedRecentTransactions.length === 0 && (\r\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Text mb=\"8px\" bold>\r\n            No recent transactions\r\n          </Text>\r\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\r\n            Close\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n      {account &&\r\n        chainId &&\r\n        sortedRecentTransactions.map((sortedRecentTransaction) => {\r\n          const { hash, summary } = sortedRecentTransaction\r\n          const { icon, color } = getRowStatus(sortedRecentTransaction)\r\n\r\n          return (\r\n            <>\r\n              <Flex key={hash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n                <LinkExternal href={getBscScanLink(chainId, hash, 'transaction')} color={color}>\r\n                  {summary ?? hash}\r\n                </LinkExternal>\r\n                {icon}\r\n              </Flex>\r\n            </>\r\n          )\r\n        })}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RecentTransactionsModal\r\n"]},"metadata":{},"sourceType":"module"}