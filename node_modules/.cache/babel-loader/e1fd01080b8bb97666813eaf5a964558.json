{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROYECTOS\\\\CACAO-swap\\\\src\\\\components\\\\SearchModal\\\\CurrencySearchModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useLast from '../../hooks/useLast';\nimport { useSelectedListUrl } from '../../state/lists/hooks';\nimport Modal from '../Modal';\nimport { CurrencySearch } from './CurrencySearch';\nimport { ListSelect } from './ListSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency\n}) {\n  _s();\n\n  const [listView, setListView] = useState(false);\n  const lastOpen = useLast(isOpen);\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false);\n    }\n  }, [isOpen, lastOpen]);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]);\n  const handleClickChangeList = useCallback(() => {\n    setListView(true);\n  }, []);\n  const handleClickBack = useCallback(() => {\n    setListView(false);\n  }, []);\n  const selectedListUrl = useSelectedListUrl();\n  const noListSelected = !selectedListUrl;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    maxHeight: 90,\n    minHeight: listView ? 40 : noListSelected ? 0 : 80,\n    children: listView ? /*#__PURE__*/_jsxDEV(ListSelect, {\n      onDismiss: onDismiss,\n      onBack: handleClickBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : noListSelected ? /*#__PURE__*/_jsxDEV(CurrencySearch, {\n      isOpen: isOpen,\n      onDismiss: onDismiss,\n      onCurrencySelect: handleCurrencySelect,\n      onChangeList: handleClickChangeList,\n      selectedCurrency: selectedCurrency,\n      otherSelectedCurrency: otherSelectedCurrency,\n      showCommonBases: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CurrencySearch, {\n      isOpen: isOpen,\n      onDismiss: onDismiss,\n      onCurrencySelect: handleCurrencySelect,\n      onChangeList: handleClickChangeList,\n      selectedCurrency: selectedCurrency,\n      otherSelectedCurrency: otherSelectedCurrency,\n      showCommonBases: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencySearchModal, \"49pngoo6sZT9IgMEc08jsavO524=\", false, function () {\n  return [useLast, useSelectedListUrl];\n});\n\n_c = CurrencySearchModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencySearchModal\");","map":{"version":3,"sources":["C:/PROYECTOS/CACAO-swap/src/components/SearchModal/CurrencySearchModal.tsx"],"names":["React","useCallback","useEffect","useState","useLast","useSelectedListUrl","Modal","CurrencySearch","ListSelect","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","selectedCurrency","otherSelectedCurrency","listView","setListView","lastOpen","handleCurrencySelect","currency","handleClickChangeList","handleClickBack","selectedListUrl","noListSelected"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAYA,eAAe,SAASC,mBAAT,CAA6B;AAC1CC,EAAAA,MAD0C;AAE1CC,EAAAA,SAF0C;AAG1CC,EAAAA,gBAH0C;AAI1CC,EAAAA,gBAJ0C;AAK1CC,EAAAA;AAL0C,CAA7B,EAMc;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAMc,QAAQ,GAAGb,OAAO,CAACM,MAAD,CAAxB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAM,IAAI,CAACO,QAAf,EAAyB;AACvBD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAJQ,EAIN,CAACN,MAAD,EAASO,QAAT,CAJM,CAAT;AAMA,QAAMC,oBAAoB,GAAGjB,WAAW,CACrCkB,QAAD,IAAwB;AACtBP,IAAAA,gBAAgB,CAACO,QAAD,CAAhB;AACAR,IAAAA,SAAS;AACV,GAJqC,EAKtC,CAACA,SAAD,EAAYC,gBAAZ,CALsC,CAAxC;AAQA,QAAMQ,qBAAqB,GAAGnB,WAAW,CAAC,MAAM;AAC9Ce,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFwC,EAEtC,EAFsC,CAAzC;AAGA,QAAMK,eAAe,GAAGpB,WAAW,CAAC,MAAM;AACxCe,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,QAAMM,eAAe,GAAGjB,kBAAkB,EAA1C;AACA,QAAMkB,cAAc,GAAG,CAACD,eAAxB;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEZ,MAAf;AAAuB,IAAA,SAAS,EAAEC,SAAlC;AAA6C,IAAA,SAAS,EAAE,EAAxD;AAA4D,IAAA,SAAS,EAAEI,QAAQ,GAAG,EAAH,GAAQQ,cAAc,GAAG,CAAH,GAAO,EAA5G;AAAA,cACGR,QAAQ,gBACP,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEJ,SAAvB;AAAkC,MAAA,MAAM,EAAEU;AAA1C;AAAA;AAAA;AAAA;AAAA,YADO,GAELE,cAAc,gBAChB,QAAC,cAAD;AACE,MAAA,MAAM,EAAEb,MADV;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,gBAAgB,EAAEO,oBAHpB;AAIE,MAAA,YAAY,EAAEE,qBAJhB;AAKE,MAAA,gBAAgB,EAAEP,gBALpB;AAME,MAAA,qBAAqB,EAAEC,qBANzB;AAOE,MAAA,eAAe,EAAE;AAPnB;AAAA;AAAA;AAAA;AAAA,YADgB,gBAWhB,QAAC,cAAD;AACE,MAAA,MAAM,EAAEJ,MADV;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,gBAAgB,EAAEO,oBAHpB;AAIE,MAAA,YAAY,EAAEE,qBAJhB;AAKE,MAAA,gBAAgB,EAAEP,gBALpB;AAME,MAAA,qBAAqB,EAAEC,qBANzB;AAOE,MAAA,eAAe,EAAE;AAPnB;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7DuBL,mB;UAQLL,O,EAuBOC,kB;;;KA/BFI,mB","sourcesContent":["import { Currency } from '@pancakeswap-libs/sdk'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport useLast from '../../hooks/useLast'\r\nimport { useSelectedListUrl } from '../../state/lists/hooks'\r\nimport Modal from '../Modal'\r\nimport { CurrencySearch } from './CurrencySearch'\r\nimport { ListSelect } from './ListSelect'\r\n\r\ninterface CurrencySearchModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  // eslint-disable-next-line react/no-unused-prop-types\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  isOpen,\r\n  onDismiss,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n}: CurrencySearchModalProps) {\r\n  const [listView, setListView] = useState<boolean>(false)\r\n  const lastOpen = useLast(isOpen)\r\n\r\n  useEffect(() => {\r\n    if (isOpen && !lastOpen) {\r\n      setListView(false)\r\n    }\r\n  }, [isOpen, lastOpen])\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      onDismiss()\r\n    },\r\n    [onDismiss, onCurrencySelect]\r\n  )\r\n\r\n  const handleClickChangeList = useCallback(() => {\r\n    setListView(true)\r\n  }, [])\r\n  const handleClickBack = useCallback(() => {\r\n    setListView(false)\r\n  }, [])\r\n\r\n  const selectedListUrl = useSelectedListUrl()\r\n  const noListSelected = !selectedListUrl\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\r\n      {listView ? (\r\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\r\n      ) : noListSelected ? (\r\n        <CurrencySearch\r\n          isOpen={isOpen}\r\n          onDismiss={onDismiss}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onChangeList={handleClickChangeList}\r\n          selectedCurrency={selectedCurrency}\r\n          otherSelectedCurrency={otherSelectedCurrency}\r\n          showCommonBases={false}\r\n        />\r\n      ) : (\r\n        <CurrencySearch\r\n          isOpen={isOpen}\r\n          onDismiss={onDismiss}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onChangeList={handleClickChangeList}\r\n          selectedCurrency={selectedCurrency}\r\n          otherSelectedCurrency={otherSelectedCurrency}\r\n          showCommonBases={false}\r\n        />\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}