{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$();\n\nimport { Pair, Token } from '@pancakeswap-libs/sdk';\nimport flatMap from 'lodash.flatmap';\nimport { useCallback, useMemo } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants';\nimport { useActiveWeb3React } from '../../hooks'; // eslint-disable-next-line import/no-cycle\n\nimport { useAllTokens } from '../../hooks/Tokens';\nimport { addSerializedPair, addSerializedToken, removeSerializedToken, updateUserDarkMode, updateUserDeadline, updateUserExpertMode, updateUserSlippageTolerance, muteAudio, unmuteAudio } from './actions';\nimport { setThemeCache } from '../../utils/theme';\n\nfunction serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  };\n}\n\nfunction deserializeToken(serializedToken) {\n  return new Token(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name);\n}\n\nexport function useIsDarkMode() {\n  _s();\n\n  const {\n    userDarkMode,\n    matchesDarkMode\n  } = useSelector( // eslint-disable-next-line @typescript-eslint/no-shadow\n  ({\n    user: {\n      matchesDarkMode,\n      userDarkMode\n    }\n  }) => ({\n    userDarkMode,\n    matchesDarkMode\n  }), shallowEqual);\n  return userDarkMode === null ? matchesDarkMode : userDarkMode;\n}\n\n_s(useIsDarkMode, \"fn6etfcHXfMs02JV/usc15XJU0k=\", false, function () {\n  return [useSelector];\n});\n\nexport function useDarkModeManager() {\n  _s2();\n\n  const dispatch = useDispatch();\n  const {\n    userDarkMode\n  } = useSelector( // eslint-disable-next-line @typescript-eslint/no-shadow\n  ({\n    user: {\n      userDarkMode\n    }\n  }) => ({\n    userDarkMode\n  }), shallowEqual);\n  const darkMode = useIsDarkMode();\n  const toggleSetDarkMode = useCallback(() => {\n    setThemeCache(!userDarkMode);\n    dispatch(updateUserDarkMode({\n      userDarkMode: !userDarkMode\n    }));\n  }, [userDarkMode, dispatch]);\n  return [darkMode, toggleSetDarkMode];\n}\n\n_s2(useDarkModeManager, \"dUf2vtNsPqN7JBPlaLgBYV7e93w=\", false, function () {\n  return [useDispatch, useSelector, useIsDarkMode];\n});\n\nexport function useAudioModeManager() {\n  _s3();\n\n  const dispatch = useDispatch();\n  const audioPlay = useSelector(state => state.user.audioPlay);\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio());\n    } else {\n      dispatch(unmuteAudio());\n    }\n  }, [audioPlay, dispatch]);\n  return [audioPlay, toggleSetAudioMode];\n}\n\n_s3(useAudioModeManager, \"peXMsI6wL8RFr9b05KQwkjrw8ic=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport function useIsExpertMode() {\n  _s4();\n\n  return useSelector(state => state.user.userExpertMode);\n}\n\n_s4(useIsExpertMode, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport function useExpertModeManager() {\n  _s5();\n\n  const dispatch = useDispatch();\n  const expertMode = useIsExpertMode();\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({\n      userExpertMode: !expertMode\n    }));\n  }, [expertMode, dispatch]);\n  return [expertMode, toggleSetExpertMode];\n}\n\n_s5(useExpertModeManager, \"ULLfsmjCcahFerd6rXziokiA+RI=\", false, function () {\n  return [useDispatch, useIsExpertMode];\n});\n\nexport function useUserSlippageTolerance() {\n  _s6();\n\n  const dispatch = useDispatch();\n  const userSlippageTolerance = useSelector(state => {\n    return state.user.userSlippageTolerance;\n  });\n  const setUserSlippageTolerance = useCallback(slippageTolerance => {\n    dispatch(updateUserSlippageTolerance({\n      userSlippageTolerance: slippageTolerance\n    }));\n  }, [dispatch]);\n  return [userSlippageTolerance, setUserSlippageTolerance];\n}\n\n_s6(useUserSlippageTolerance, \"lO9PfBe6MbiNxNv0Q3TS/IyxyIE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport function useUserDeadline() {\n  _s7();\n\n  const dispatch = useDispatch();\n  const userDeadline = useSelector(state => {\n    return state.user.userDeadline;\n  });\n  const setUserDeadline = useCallback(deadline => {\n    dispatch(updateUserDeadline({\n      userDeadline: deadline\n    }));\n  }, [dispatch]);\n  return [userDeadline, setUserDeadline];\n}\n\n_s7(useUserDeadline, \"nR4EOlfoy/fKrJpN3ITukwrTqzM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport function useAddUserToken() {\n  _s8();\n\n  const dispatch = useDispatch();\n  return useCallback(token => {\n    dispatch(addSerializedToken({\n      serializedToken: serializeToken(token)\n    }));\n  }, [dispatch]);\n}\n\n_s8(useAddUserToken, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\n\nexport function useRemoveUserAddedToken() {\n  _s9();\n\n  const dispatch = useDispatch();\n  return useCallback((chainId, address) => {\n    dispatch(removeSerializedToken({\n      chainId,\n      address\n    }));\n  }, [dispatch]);\n}\n\n_s9(useRemoveUserAddedToken, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\n\nexport function useUserAddedTokens() {\n  _s10();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const serializedTokensMap = useSelector(({\n    user: {\n      tokens\n    }\n  }) => tokens);\n  return useMemo(() => {\n    var _serializedTokensMap;\n\n    if (!chainId) return [];\n    return Object.values((_serializedTokensMap = serializedTokensMap[chainId]) !== null && _serializedTokensMap !== void 0 ? _serializedTokensMap : {}).map(deserializeToken);\n  }, [serializedTokensMap, chainId]);\n}\n\n_s10(useUserAddedTokens, \"PdCPfDsyvt0iyDvIy6GqqMS0G5U=\", false, function () {\n  return [useActiveWeb3React, useSelector];\n});\n\nfunction serializePair(pair) {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  };\n}\n\nexport function usePairAdder() {\n  _s11();\n\n  const dispatch = useDispatch();\n  return useCallback(pair => {\n    dispatch(addSerializedPair({\n      serializedPair: serializePair(pair)\n    }));\n  }, [dispatch]);\n}\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\n\n_s11(usePairAdder, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\n\nexport function toV2LiquidityToken([tokenA, tokenB]) {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs');\n}\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\n\nexport function useTrackedTokenPairs() {\n  _s12();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const tokens = useAllTokens(); // pinned pairs\n\n  const pinnedPairs = useMemo(() => {\n    var _PINNED_PAIRS$chainId;\n\n    return chainId ? (_PINNED_PAIRS$chainId = PINNED_PAIRS[chainId]) !== null && _PINNED_PAIRS$chainId !== void 0 ? _PINNED_PAIRS$chainId : [] : [];\n  }, [chainId]); // pairs for every token against every base\n\n  const generatedPairs = useMemo(() => chainId ? flatMap(Object.keys(tokens), tokenAddress => {\n    var _BASES_TO_TRACK_LIQUI;\n\n    const token = tokens[tokenAddress]; // for each token on the current chain,\n\n    return (// loop though all bases on the current chain\n      ((_BASES_TO_TRACK_LIQUI = BASES_TO_TRACK_LIQUIDITY_FOR[chainId]) !== null && _BASES_TO_TRACK_LIQUI !== void 0 ? _BASES_TO_TRACK_LIQUI : []). // to construct pairs of the given token with each base\n      map(base => {\n        if (base.address === token.address) {\n          return null;\n        }\n\n        return [base, token];\n      }).filter(p => p !== null)\n    );\n  }) : [], [tokens, chainId]); // pairs saved by users\n\n  const savedSerializedPairs = useSelector(({\n    user: {\n      pairs\n    }\n  }) => pairs);\n  const userPairs = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return [];\n    const forChain = savedSerializedPairs[chainId];\n    if (!forChain) return [];\n    return Object.keys(forChain).map(pairId => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\n    });\n  }, [savedSerializedPairs, chainId]);\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB);\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\n      if (memo[key]) return memo;\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\n      return memo;\n    }, {});\n    return Object.keys(keyed).map(key => keyed[key]);\n  }, [combinedList]);\n}\n\n_s12(useTrackedTokenPairs, \"oBOSU+ngm2b9bAOkfOtlhmAQB98=\", false, function () {\n  return [useActiveWeb3React, useAllTokens, useSelector];\n});","map":{"version":3,"sources":["C:/PROYECTOS/CACAO-swap/src/state/user/hooks.tsx"],"names":["Pair","Token","flatMap","useCallback","useMemo","shallowEqual","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useActiveWeb3React","useAllTokens","addSerializedPair","addSerializedToken","removeSerializedToken","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","updateUserSlippageTolerance","muteAudio","unmuteAudio","setThemeCache","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","userDarkMode","matchesDarkMode","user","useDarkModeManager","dispatch","darkMode","toggleSetDarkMode","useAudioModeManager","audioPlay","state","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","slippageTolerance","useUserDeadline","userDeadline","setUserDeadline","deadline","useAddUserToken","useRemoveUserAddedToken","useUserAddedTokens","serializedTokensMap","tokens","Object","values","map","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","getAddress","useTrackedTokenPairs","pinnedPairs","generatedPairs","keys","tokenAddress","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key"],"mappings":"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","sourcesContent":["import { ChainId, Pair, Token } from '@pancakeswap-libs/sdk'\r\nimport flatMap from 'lodash.flatmap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\n// eslint-disable-next-line import/no-cycle\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserDarkMode,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  muteAudio,\r\n  unmuteAudio,\r\n} from './actions'\r\nimport { setThemeCache } from '../../utils/theme'\r\n\r\nfunction serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  }\r\n}\r\n\r\nfunction deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name\r\n  )\r\n}\r\n\r\nexport function useIsDarkMode(): boolean {\r\n  const { userDarkMode, matchesDarkMode } = useSelector<\r\n    AppState,\r\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\r\n  >(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\r\n      userDarkMode,\r\n      matchesDarkMode,\r\n    }),\r\n    shallowEqual\r\n  )\r\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\r\n}\r\n\r\nexport function useDarkModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { userDarkMode } = useSelector<AppState, { userDarkMode: boolean | null }>(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { userDarkMode } }) => ({\r\n      userDarkMode,\r\n    }),\r\n    shallowEqual\r\n  )\r\n  const darkMode = useIsDarkMode()\r\n\r\n  const toggleSetDarkMode = useCallback(() => {\r\n    setThemeCache(!userDarkMode)\r\n    dispatch(updateUserDarkMode({ userDarkMode: !userDarkMode }))\r\n  }, [userDarkMode, dispatch])\r\n\r\n  return [darkMode, toggleSetDarkMode]\r\n}\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippageTolerance: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippageTolerance }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserDeadline(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\nexport function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId]\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [\r\n    generatedPairs,\r\n    pinnedPairs,\r\n    userPairs,\r\n  ])\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}